<!doctype html>
<html class="no-js" lang="zh-CN">

<head>
        <link rel="canonical" href="https://potatsolite.github.io/news/article-75246.htm" />
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>netty系列之:netty中的核心编码器base64</title>
        <meta name="description" content="简介  我们知道数据在netty中传输是以ByteBuf的形式进行的,可以说ByteBuf是netty的数据传输基础。但是对于现代的应用程序来说，通常我们需要用到其他的数据结构或者类型。 为了方便我们" />
        <link rel="icon" href="/assets/website/img/potatsolite/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Potatso Lite机场订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://potatsolite.github.io/news/article-75246.htm" />
    <meta property="og:site_name" content="Potatso Lite机场订阅官网" />
    <meta property="og:title" content="netty系列之:netty中的核心编码器base64" />
    <meta property="og:image" content="https://potatsolite.github.io/uploads/20240823-1/5d4f126c1e76a423b3c1c35a32676d41.webp" />
        <meta property="og:release_date" content="2025-03-16T10:30:37" />
    <meta property="og:updated_time" content="2025-03-16T10:30:37" />
        <meta property="og:description" content="简介  我们知道数据在netty中传输是以ByteBuf的形式进行的,可以说ByteBuf是netty的数据传输基础。但是对于现代的应用程序来说，通常我们需要用到其他的数据结构或者类型。 为了方便我们" />
        
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="manifest" href="site.webmanifest">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="netty系列之:netty中的核心编码器base64">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <!-- CSS here -->
    <link rel="stylesheet" href="/assets/website/css/potatsolite/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/owl.carousel.min.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/slicknav.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/flaticon.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/progressbar_barfiller.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/gijgo.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/animate.min.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/animated-headline.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/magnific-popup.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/fontawesome-all.min.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/themify-icons.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/slick.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/nice-select.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/style.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-D5F3LS5DN7"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-D5F3LS5DN7');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- ? Preloader Start -->
    <div id="preloader-active">
        <div class="preloader d-flex align-items-center justify-content-center">
            <div class="preloader-inner position-relative">
                <div class="preloader-circle"></div>
                <div class="preloader-img pere-text">
                    <img src="/assets/website/img/potatsolite/logo/loder.png" alt="">
                </div>
            </div>
        </div>
    </div>
    <!-- Preloader Start -->
    <header>
        <!-- Header Start -->
        <div class="header-area header-transparent">
            <div class="main-header ">
                <div class="header-bottom  header-sticky">
                    <div class="container-fluid">
                        <div class="row align-items-center">
                            <!-- Logo -->
                            <div class="col-xl-2 col-lg-2">
                                <div class="logo">
                                    <a href="/">
                                                                        <span>Potatso Lite</span>
                                                                        </a>
                                </div>
                            </div>
                            <div class="col-xl-10 col-lg-10">
                                <div class="menu-wrapper d-flex align-items-center justify-content-end">
                                    <!-- Main-menu -->
                                    <div class="main-menu d-none d-lg-block">
                                        <nav>
                                            <ul id="navigation">
                                                                                                <li><a href="/">首页</a></li>
                                                                                                <li><a href="/free-nodes/">免费节点</a></li>
                                                                                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                                                <li><a href="/client.htm">客户端</a></li>
                                                                                                <li><a href="/news/">新闻资讯</a></li>
                                                                                            </ul>
                                        </nav>
                                    </div>
                                </div>
                            </div>
                            <!-- Mobile Menu -->
                            <div class="col-12">
                                <div class="mobile_menu d-block d-lg-none"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Header End -->
    </header>
    <main>
        <!--? slider Area Start-->
        <section class="slider-area slider-area2">
            <div class="slider-active">
                <!-- Single Slider -->
                <div class="single-slider slider-height2">
                    <div class="container">
                        <div class="row">
                            <div class="col-xl-8 col-lg-11 col-md-12">
                                <div class="hero__caption hero__caption2">
                                    <h1 data-animation="bounceIn" data-delay="0.2s">netty系列之:netty中的核心编码器base64</h1>
                                    <!-- breadcrumb Start-->
                                    <nav aria-label="breadcrumb">
                                        <ol class="breadcrumb">
                                            <li class="breadcrumb-item"><a href="/">首页</a></li>
                                            <li class="breadcrumb-item"><a href="/news/">新闻资讯</a></li>
                                            <li class="breadcrumb-item">正文</li>
                                        </ol>
                                    </nav>
                                    <!-- breadcrumb End -->
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <!--? About Area-1 Start -->
        <section class="about-area1 fix pt-10 py-5">
            <div class="support-wrapper align-items-center">
                <div class="container">
                    <div class="row">
                        <div class="col-md-9">
                                            <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				<div class="toc"> <div class="toc-container-header"><span style="font-size: 2em;">简介</span></div> </div> <p>我们知道数据在netty中传输是以ByteBuf的形式进行的,可以说ByteBuf是netty的数据传输基础。但是对于现代的应用程序来说，通常我们需要用到其他的数据结构或者类型。</p> <p>为了方便我们在程序中的编写，一种方式就是在将数据传入到netty中的时候由程序员自身将数据格式进行转换，然后再调用netty的系统方法。另外一种方式就是定义一些codec，由netty的内在编码机制将程序中用到的数据格式和ByteBuf进行自动转换。</p> <p>很明显，使用codec的方式更加简捷，也更加符合程序的开发规则。</p> <p>为了方便程序的开发，netty本身在内部定义了一些核心的codec插件，我们在需要的时候直接选用即可。</p> <p>本文将会讲解netty内部实现codec的方式和一个最核心的编码器base64。</p> </h1> <p>所有的netty codec的目的就是在数据传输过程中进行数据类型的转换，换句话说就是对数据进行处理。我们知道netty中有两个对数据进行handler的类，分别是ChannelInboundHandlerAdapter和ChannelOutboundHandlerAdapter，他们分别对应channel中的inbound消息和outbound消息进行处理。</p> <p>所以很自然的，我们的codec逻辑只需要在这两个地方添加即可。</p> <p>netty为我们提供了两个HandlerAdapter类的继承类，分别是MessageToMessageDecoder和MessageToMessageEncoder：</p> <pre><code>public abstract class MessageToMessageEncoder&lt;I&gt; extends ChannelOutboundHandlerAdapter   public abstract class MessageToMessageDecoder&lt;I&gt; extends ChannelInboundHandlerAdapter</code></pre> <p>从名字就可以看出来这两个类分别使用来编码和解码用的，所以我们的codec只需要分别实现这两个类即可。</p> <p>以下是一个StringToIntegerDecoder和IntegerToStringEncoder的例子：</p> <pre><code>       public class StringToIntegerDecoder extends                MessageToMessageDecoder&lt;String&gt; {                @Override            public void decode(ChannelHandlerContext ctx, String message,                               List&lt;Object&gt; out) throws Exception {                out.add(message.length());            }        }</code></pre> <pre><code>       public class IntegerToStringEncoder extends                MessageToMessageEncoder&lt;Integer&gt; {                @Override            public void encode(ChannelHandlerContext ctx, Integer message, List&lt;Object&gt; out)                    throws Exception {                out.add(message.toString());            }        }</code></pre> <p>最简单的实现就是分别重构这两个类的decode和encode方法。</p> </h1> <p>我们知道JDK中已经有了Base64实现的工具类叫做java.util.Base64。但是在netty中又使用了一个新的实现类同样叫做Base64，它的全称是io.netty.handler.codec.base64.Base64。</p> <p>这个Base64类中用到了一个Base64Dialect类，也就是netty中Base64支持的Base64编码方式。Base64Dialect中提供了下面的几种类型：</p> <pre><code>STANDARD URL_SAFE ORDERED</code></pre> <p>其中STANDARD对应的是RFC3548也是JDK中的标准Base64,URL_SAFE对应的是RFC3548中的base64url版本，对应的JDK中的getUrlEncode。</p> <p>最后一个是ORDERED，代表的是RFC1940,这个编码实现在JDK中是没有的。</p> <p>为什么JDK中已经有了Base64的工具类，netty中还需要自己创建一个新的类呢？</p> <p>我们可以考虑一下在netty中Base64用到的场景，通常来说我们是在handler中添加自定义编码，而这些handler主要是针对于数据流进行处理。</p> <p>JDK中自带的Base64实现在定长的数据上使用还是没问题的，但是如果运用于数据流的处理话，效率就会比较低。所以Netty才需要为base64在流数据的情况下重新实现一个Base64类。</p> <p>netty中的实现方式使用的是Robert Harder's Public Domain Base64 Encoder/Decoder。这里就不多讲这个算法的实现逻辑了。感兴趣的朋友可以自行探索。</p> <p>Base64提供了将ByteBuf进行base64编码和解码的方法，我们选择参数最长的方法来观察，如下所示：</p> <pre><code>    public static ByteBuf encode(             ByteBuf src, int off, int len, boolean breakLines, Base64Dialect dialect, ByteBufAllocator allocator)      public static ByteBuf decode(             ByteBuf src, int off, int len, Base64Dialect dialect, ByteBufAllocator allocator)</code></pre> <p>对于encode方法来说，需要下面几个参数：</p> <ol> <li>ByteBuf类型的src，这是我们需要进行编码的源。</li> <li>int类型的off和len，表示的是ByteBuf中要编码数据的位置。</li> <li>boolean类型的breakLines,表示是否添加换行符。</li> <li>Base64Dialect类型的dialect，表示选择的base64编码类型。</li> <li>ByteBufAllocator的allocator，表示返回的ByteBuf的生成方式。</li> </ol> <p>同样的Decode方法，需要下面的几个参数：</p> <ol> <li>ByteBuf类型的src，这是我们需要进行解码的源。</li> <li>int类型的off和len，表示的是ByteBuf中要解码数据的位置。</li> <li>Base64Dialect类型的dialect，表示选择的base64编码类型。</li> <li>ByteBufAllocator的allocator，表示返回的ByteBuf的生成方式。</li> </ol> </h1> <p>刚刚我们介绍了netty中提供的新的Base64工具类，这个工具类提供了将ByteBuf中数据进行编码和解码的方法。接下来我们看一下netty是如何使用这个工具类实现netty中的base64编码和解码器。</p> <p>netty中提供了对Base64的编码和解码器，分别是Base64Encoder和Base64Decoder, 先来看下Base64编码解码器的基本使用：</p> <pre><code>   ChannelPipeline pipeline = ...;       // Decoders    pipeline.addLast("frameDecoder", new DelimiterBasedFrameDecoder(80, Delimiters.nulDelimiter()));    pipeline.addLast("base64Decoder", new Base64Decoder());       // Encoder    pipeline.addLast("base64Encoder", new Base64Encoder());</code></pre> <p>用起来很简单，只需要把Base64Decoder和Base64Encoder添加到pipeline中即可。</p> <p>有时候Base64Decoder需要和DelimiterBasedFrameDecoder一起使用，尤其是在TCP/IP协议中，因为我们需要根据特定的Delimiters来判断ByteBuf应该被分割为几个frames。这样才能保证数据的有效性。</p> <h2 id="base64encoder">Base64Encoder</h2> <p>首先来看base64的编码器，Base64Encoder的实现比较简单，首先来看下Base64Encoder的定义：</p> <pre><code>public class Base64Encoder extends MessageToMessageEncoder&lt;ByteBuf&gt;</code></pre> <p>Base64Encoder继承自MessageToMessageEncoder，它传入的泛型ByteBuf，表示是将ByteBuf编码为ByteBuf，虽然外部的ByteBuf类型没有变化，但是ByteBuf中的数据已经被编码成为Base64了。</p> <p>接下来是Base64Encoder的构造函数：</p> <pre><code>    public Base64Encoder(boolean breakLines, Base64Dialect dialect) {         this.dialect = ObjectUtil.checkNotNull(dialect, "dialect");         this.breakLines = breakLines;     }</code></pre> <p>Base64Encoder可以接受两个参数，分别是是否有换行符的breakLines和base64编码方式的Base64Dialect。</p> <p>它的encode方法也很简单：</p> <pre><code>    protected void encode(ChannelHandlerContext ctx, ByteBuf msg, List&lt;Object&gt; out) throws Exception {         out.add(Base64.encode(msg, msg.readerIndex(), msg.readableBytes(), breakLines, dialect));     }</code></pre> <p>直接使用的是我们上面讲到的Base64工具类的encode方法，然后把返回值添加到out对象中。</p> <h2 id="base64decoder">Base64Decoder</h2> <p>Base64Decoder用来将ByteBuf中的base64编码的内容解码成为原始内容，先来看下Base64Decoder的定义：</p> <pre><code>public class Base64Decoder extends MessageToMessageDecoder&lt;ByteBuf&gt;</code></pre> <p>Base64Decoder继承了MessageToMessageDecoder，传入的泛型是ByteBuf。</p> <p>先看下Base64Decoder的构造函数：</p> <pre><code>public Base64Decoder(Base64Dialect dialect) {         this.dialect = ObjectUtil.checkNotNull(dialect, "dialect");     }</code></pre> <p>Base64Decoder的构造函数很简单，和Base64Encoder相比它只需要一个参数就是Base64Dialect类型的dialect，表示的是选择的base64解码的方式。</p> <p>接下来就是它的解码方法：</p> <pre><code>    protected void decode(ChannelHandlerContext ctx, ByteBuf msg, List&lt;Object&gt; out) throws Exception {         out.add(Base64.decode(msg, msg.readerIndex(), msg.readableBytes(), dialect));     }</code></pre> <p>解码方法也是调用Base64工具类的decode方法，然后将其添加到返回的out list中去。</p> </h1> <p>本章介绍了netty中的核心编码器Base64,它负责将ByteBuf中的消息编码为base64格式，同时提供了对应的解码器，大家可以在需要的时候进行使用。</p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-74555.htm">新手养猫适合养什么猫能养俄罗斯（养猫新手养什么猫好）</a></p>
                                        <p>下一个：<a href="/news/article-75249.htm">给猫咪打疫苗打不进去（猫疫苗打进去推不动）</a></p>
                                    </div>
                                        </div>
                        <div class="col-md-3">
                            <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-66113.htm" title="河南兽药公司排名前十名（河南兽药排名前十名有哪些）">河南兽药公司排名前十名（河南兽药排名前十名有哪些）</a></li>
                        <li class="py-2"><a href="/news/article-52808.htm" title="宠物绝育去哪（宠物绝育手术预约）">宠物绝育去哪（宠物绝育手术预约）</a></li>
                        <li class="py-2"><a href="/news/article-75906.htm" title="Visual Studio App Center 中的 Bug 跟踪服务">Visual Studio App Center 中的 Bug 跟踪服务</a></li>
                        <li class="py-2"><a href="/news/article-37784.htm" title="vue axios请求分页器">vue axios请求分页器</a></li>
                        <li class="py-2"><a href="/news/article-77282.htm" title="附近免费领养狗狗电话 附近免费领养狗狗电话号码">附近免费领养狗狗电话 附近免费领养狗狗电话号码</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-18-free-node-subscribe.htm" title="「1月18日」最高速度20.6M/S，2025年Potatso Lite每天更新免费机场订阅分享">「1月18日」最高速度20.6M/S，2025年Potatso Lite每天更新免费机场订阅分享</a></li>
                        <li class="py-2"><a href="/news/article-39253.htm" title="URL编码及解码原理">URL编码及解码原理</a></li>
                        <li class="py-2"><a href="/news/article-37785.htm" title="VUE excel 特殊表格处理">VUE excel 特殊表格处理</a></li>
                        <li class="py-2"><a href="/news/article-70569.htm" title="C语言算法进阶——递归">C语言算法进阶——递归</a></li>
                        <li class="py-2"><a href="/news/article-46669.htm" title="中国动物疫苗市场分析图（中国动物疫苗公司排名）">中国动物疫苗市场分析图（中国动物疫苗公司排名）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">56</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>

                        </div>
                    </div>
                </div>
            </div>
        </section>
        <!-- About Area End -->
    </main>
        <footer>
        <div class="footer-wrappper footer-bg">
            <!-- footer-bottom area -->
            <div class="footer-bottom-area">
                <div class="container">
                    <div class="footer-border">
                        <div class="row d-flex align-items-center">
                            <div class="col-xl-12 ">
                                <div class="footer-copy-right text-center">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                                    <p>
                                        Potatso Lite机场订阅官网 版权所有
                                        <br />
                                        Powered by WordPress
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Footer End-->
        </div>
    </footer>
    <!-- Scroll Up -->
    <div id="back-top">
        <a title="Go to Top" href="#"> <i class="fas fa-level-up-alt"></i></a>
    </div>
    <!-- JS here -->
    <script src="/assets/website/js/frontend/potatsolite/vendor/modernizr-3.5.0.min.js"></script>
    <!-- Jquery, Popper, Bootstrap -->
    <script src="/assets/website/js/frontend/potatsolite/vendor/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/popper.min.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/bootstrap.min.js"></script>
    <!-- Jquery Mobile Menu -->
    <script src="/assets/website/js/frontend/potatsolite/jquery.slicknav.min.js"></script>
    <!-- Jquery Slick , Owl-Carousel Plugins -->
    <script src="/assets/website/js/frontend/potatsolite/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/slick.min.js"></script>
    <!-- One Page, Animated-HeadLin -->
    <script src="/assets/website/js/frontend/potatsolite/wow.min.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/animated.headline.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/jquery.magnific-popup.js"></script>
    <!-- Date Picker -->
    <script src="/assets/website/js/frontend/potatsolite/gijgo.min.js"></script>
    <!-- Nice-select, sticky -->
    <script src="/assets/website/js/frontend/potatsolite/jquery.nice-select.min.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/jquery.sticky.js"></script>
    <!-- Progress -->
    <script src="/assets/website/js/frontend/potatsolite/jquery.barfiller.js"></script>
    <!-- counter , waypoint,Hover Direction -->
    <script src="/assets/website/js/frontend/potatsolite/jquery.counterup.min.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/waypoints.min.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/jquery.countdown.min.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/hover-direction-snake.min.js"></script>
    <!-- contact js -->
    <script src="/assets/website/js/frontend/potatsolite/contact.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/jquery.form.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/jquery.validate.min.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/mail-script.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/jquery.ajaxchimp.min.js"></script>
    <!-- Jquery Plugins, main Jquery -->
    <script src="/assets/website/js/frontend/potatsolite/plugins.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>