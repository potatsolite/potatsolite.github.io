<!doctype html>
<html class="no-js" lang="zh-CN">

<head>
        <link rel="canonical" href="https://potatsolite.github.io/news/article-53877.htm" />
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>pytorch 自动构建任意层的深度神经网络(DNN)</title>
        <meta name="description" content="动手撸神经网络的代码，是大家常常遇到的问题。在设计自己的网络时，需要考虑网络大小，隐藏层层数，激活函数和参数初始化方法。最笨拙的方法就是固定下来，发生变化就要手动调整一次。这里介绍一种可以自动生生网络" />
        <link rel="icon" href="/assets/website/img/potatsolite/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Potatso Lite机场订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://potatsolite.github.io/news/article-53877.htm" />
    <meta property="og:site_name" content="Potatso Lite机场订阅官网" />
    <meta property="og:title" content="pytorch 自动构建任意层的深度神经网络(DNN)" />
    <meta property="og:image" content="https://potatsolite.github.io/uploads/20240823-1/5d4f126c1e76a423b3c1c35a32676d41.webp" />
        <meta property="og:release_date" content="2025-02-09T10:06:07" />
    <meta property="og:updated_time" content="2025-02-09T10:06:07" />
        <meta property="og:description" content="动手撸神经网络的代码，是大家常常遇到的问题。在设计自己的网络时，需要考虑网络大小，隐藏层层数，激活函数和参数初始化方法。最笨拙的方法就是固定下来，发生变化就要手动调整一次。这里介绍一种可以自动生生网络" />
        
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="manifest" href="site.webmanifest">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="pytorch 自动构建任意层的深度神经网络(DNN)">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <!-- CSS here -->
    <link rel="stylesheet" href="/assets/website/css/potatsolite/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/owl.carousel.min.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/slicknav.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/flaticon.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/progressbar_barfiller.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/gijgo.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/animate.min.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/animated-headline.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/magnific-popup.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/fontawesome-all.min.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/themify-icons.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/slick.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/nice-select.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/style.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-D5F3LS5DN7"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-D5F3LS5DN7');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- ? Preloader Start -->
    <div id="preloader-active">
        <div class="preloader d-flex align-items-center justify-content-center">
            <div class="preloader-inner position-relative">
                <div class="preloader-circle"></div>
                <div class="preloader-img pere-text">
                    <img src="/assets/website/img/potatsolite/logo/loder.png" alt="">
                </div>
            </div>
        </div>
    </div>
    <!-- Preloader Start -->
    <header>
        <!-- Header Start -->
        <div class="header-area header-transparent">
            <div class="main-header ">
                <div class="header-bottom  header-sticky">
                    <div class="container-fluid">
                        <div class="row align-items-center">
                            <!-- Logo -->
                            <div class="col-xl-2 col-lg-2">
                                <div class="logo">
                                    <a href="/">
                                                                        <span>Potatso Lite</span>
                                                                        </a>
                                </div>
                            </div>
                            <div class="col-xl-10 col-lg-10">
                                <div class="menu-wrapper d-flex align-items-center justify-content-end">
                                    <!-- Main-menu -->
                                    <div class="main-menu d-none d-lg-block">
                                        <nav>
                                            <ul id="navigation">
                                                                                                <li><a href="/">首页</a></li>
                                                                                                <li><a href="/free-nodes/">免费节点</a></li>
                                                                                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                                                <li><a href="/client.htm">客户端</a></li>
                                                                                                <li><a href="/news/">新闻资讯</a></li>
                                                                                            </ul>
                                        </nav>
                                    </div>
                                </div>
                            </div>
                            <!-- Mobile Menu -->
                            <div class="col-12">
                                <div class="mobile_menu d-block d-lg-none"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Header End -->
    </header>
    <main>
        <!--? slider Area Start-->
        <section class="slider-area slider-area2">
            <div class="slider-active">
                <!-- Single Slider -->
                <div class="single-slider slider-height2">
                    <div class="container">
                        <div class="row">
                            <div class="col-xl-8 col-lg-11 col-md-12">
                                <div class="hero__caption hero__caption2">
                                    <h1 data-animation="bounceIn" data-delay="0.2s">pytorch 自动构建任意层的深度神经网络(DNN)</h1>
                                    <!-- breadcrumb Start-->
                                    <nav aria-label="breadcrumb">
                                        <ol class="breadcrumb">
                                            <li class="breadcrumb-item"><a href="/">首页</a></li>
                                            <li class="breadcrumb-item"><a href="/news/">新闻资讯</a></li>
                                            <li class="breadcrumb-item">正文</li>
                                        </ol>
                                    </nav>
                                    <!-- breadcrumb End -->
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <!--? About Area-1 Start -->
        <section class="about-area1 fix pt-10 py-5">
            <div class="support-wrapper align-items-center">
                <div class="container">
                    <div class="row">
                        <div class="col-md-9">
                                            <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-dracula"> <p>动手撸神经网络的代码，是大家常常遇到的问题。在设计自己的网络时，需要考虑网络大小，隐藏层层数，激活函数和参数初始化方法。最笨拙的方法就是固定下来，发生变化就要手动调整一次。这里介绍一种可以自动生生网络的方法，每次改变只需要调整一些参数，网络就会自动改变，大大提升了生产代码的效率。<br /> 参考链接：<br /> 1、<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/qq_37385726/article/details/81740233"  rel="nofollow">Pytorch之搭建神经网络的四种方法</a><br /> 2、<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/bigkaimyc/article/details/103939696"  rel="nofollow">Pytorch–1.使用Pytorch搭建一个简易的神经网络</a><br /> 3、<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/zkk9527/article/details/88399176"  rel="nofollow">十分钟掌握Pytorch搭建神经网络的流程</a><br /> 4、<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/jining11/article/details/88728052"  rel="nofollow">使用pytorch搭建神经网络</a><br /> 5、<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/weixin_42263486/article/details/108279905"  rel="nofollow">PyTorch使用教程-PyTorch构建神经网络(下)</a><br /> 6、<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/luo3300612/article/details/97675312"  rel="nofollow">Pytorch 默认参数初始化</a><br /> 7、<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.jianshu.com/p/1a1339c4acd7"  rel="nofollow">Pytorch中常用的四种优化器SGD、Momentum、RMSProp、Adam</a></p> <pre><code class="prism language-python"><span class="token comment"># -*- coding: utf-8 -*-</span> <span class="token triple-quoted-string string">""" Created on 2021.06.18 @author: LXA """</span> <span class="token keyword">import</span> torch <span class="token keyword">import</span> torch<span class="token punctuation">.</span>nn <span class="token keyword">as</span> tn <span class="token keyword">import</span> torch<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>functional <span class="token keyword">as</span> tnf <span class="token keyword">from</span> torch<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>parameter <span class="token keyword">import</span> Parameter <span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  <span class="token keyword">class</span> <span class="token class-name">my_actFunc</span><span class="token punctuation">(</span>tn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> actName<span class="token operator">=</span><span class="token string">'linear'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>         <span class="token builtin">super</span><span class="token punctuation">(</span>my_actFunc<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>         self<span class="token punctuation">.</span>actName <span class="token operator">=</span> actName      <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x_input<span class="token punctuation">)</span><span class="token punctuation">:</span>         <span class="token keyword">if</span> <span class="token builtin">str</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span>self<span class="token punctuation">.</span>actName<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'relu'</span><span class="token punctuation">:</span>             out_x <span class="token operator">=</span> tnf<span class="token punctuation">.</span>relu<span class="token punctuation">(</span>x_input<span class="token punctuation">)</span>         <span class="token keyword">elif</span> <span class="token builtin">str</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span>self<span class="token punctuation">.</span>actName<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'leaky_relu'</span><span class="token punctuation">:</span>             out_x <span class="token operator">=</span> tnf<span class="token punctuation">.</span>leaky_relu<span class="token punctuation">(</span>x_input<span class="token punctuation">)</span>         <span class="token keyword">elif</span> <span class="token builtin">str</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span>self<span class="token punctuation">.</span>actName<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'tanh'</span><span class="token punctuation">:</span>             out_x <span class="token operator">=</span> torch<span class="token punctuation">.</span>tanh<span class="token punctuation">(</span>x_input<span class="token punctuation">)</span>         <span class="token keyword">elif</span> <span class="token builtin">str</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span>self<span class="token punctuation">.</span>actName<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'srelu'</span><span class="token punctuation">:</span>             out_x <span class="token operator">=</span> tnf<span class="token punctuation">.</span>relu<span class="token punctuation">(</span>x_input<span class="token punctuation">)</span><span class="token operator">*</span>tnf<span class="token punctuation">.</span>relu<span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>x_input<span class="token punctuation">)</span>         <span class="token keyword">elif</span> <span class="token builtin">str</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span>self<span class="token punctuation">.</span>actName<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'elu'</span><span class="token punctuation">:</span>             out_x <span class="token operator">=</span> tnf<span class="token punctuation">.</span>elu<span class="token punctuation">(</span>x_input<span class="token punctuation">)</span>         <span class="token keyword">elif</span> <span class="token builtin">str</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span>self<span class="token punctuation">.</span>actName<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'sin'</span><span class="token punctuation">:</span>             out_x <span class="token operator">=</span> torch<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>x_input<span class="token punctuation">)</span>         <span class="token keyword">elif</span> <span class="token builtin">str</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span>self<span class="token punctuation">.</span>actName<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'sigmoid'</span><span class="token punctuation">:</span>             out_x <span class="token operator">=</span> tnf<span class="token punctuation">.</span>sigmoid<span class="token punctuation">(</span>x_input<span class="token punctuation">)</span>         <span class="token keyword">else</span><span class="token punctuation">:</span>             out_x <span class="token operator">=</span> x_input         <span class="token keyword">return</span> out_x          <span class="token comment"># ----------------dense net(constructing NN and initializing weights and bias )------------</span> <span class="token keyword">class</span> <span class="token class-name">Pure_DenseNet</span><span class="token punctuation">(</span>tn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token triple-quoted-string string">"""     Args:         indim: the dimension for input data         outdim: the dimension for output         hidden_units: the number of  units for hidden layer, a list or a tuple         name2Model: the name of using DNN type, DNN , ScaleDNN or FourierDNN         actName2in: the name of activation function for input layer         actName: the name of activation function for hidden layer         actName2out: the name of activation function for output layer         scope2W: the namespace of weight         scope2B: the namespace of bias     """</span>     <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> indim<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> outdim<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> hidden_units<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> name2Model<span class="token operator">=</span><span class="token string">'DNN'</span><span class="token punctuation">,</span> actName2in<span class="token operator">=</span><span class="token string">'tanh'</span><span class="token punctuation">,</span> actName<span class="token operator">=</span><span class="token string">'tanh'</span><span class="token punctuation">,</span>                  actName2out<span class="token operator">=</span><span class="token string">'linear'</span><span class="token punctuation">,</span> scope2W<span class="token operator">=</span><span class="token string">'Weight'</span><span class="token punctuation">,</span> scope2B<span class="token operator">=</span><span class="token string">'Bias'</span><span class="token punctuation">,</span> type2float<span class="token operator">=</span><span class="token string">'float32'</span><span class="token punctuation">,</span> to_gpu<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> gpu_no<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>         <span class="token builtin">super</span><span class="token punctuation">(</span>Pure_DenseNet<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>         self<span class="token punctuation">.</span>indim <span class="token operator">=</span> indim         self<span class="token punctuation">.</span>outdim <span class="token operator">=</span> outdim         self<span class="token punctuation">.</span>hidden_units <span class="token operator">=</span> hidden_units         self<span class="token punctuation">.</span>name2Model <span class="token operator">=</span> name2Model         self<span class="token punctuation">.</span>actFunc_in <span class="token operator">=</span> my_actFunc<span class="token punctuation">(</span>actName<span class="token operator">=</span>actName2in<span class="token punctuation">)</span>         self<span class="token punctuation">.</span>actFunc <span class="token operator">=</span> my_actFunc<span class="token punctuation">(</span>actName<span class="token operator">=</span>actName<span class="token punctuation">)</span>         self<span class="token punctuation">.</span>actFunc_out <span class="token operator">=</span> my_actFunc<span class="token punctuation">(</span>actName<span class="token operator">=</span>actName2out<span class="token punctuation">)</span>         self<span class="token punctuation">.</span>dense_layers <span class="token operator">=</span> tn<span class="token punctuation">.</span>ModuleList<span class="token punctuation">(</span><span class="token punctuation">)</span>          input_layer <span class="token operator">=</span> tn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span>in_features<span class="token operator">=</span>indim<span class="token punctuation">,</span> out_features<span class="token operator">=</span>hidden_units<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>         tn<span class="token punctuation">.</span>init<span class="token punctuation">.</span>xavier_normal_<span class="token punctuation">(</span>input_layer<span class="token punctuation">.</span>weight<span class="token punctuation">)</span>         tn<span class="token punctuation">.</span>init<span class="token punctuation">.</span>uniform_<span class="token punctuation">(</span>input_layer<span class="token punctuation">.</span>bias<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>         self<span class="token punctuation">.</span>dense_layers<span class="token punctuation">.</span>append<span class="token punctuation">(</span>input_layer<span class="token punctuation">)</span>          <span class="token keyword">for</span> i_layer <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>hidden_units<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>             hidden_layer <span class="token operator">=</span> tn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span>in_features<span class="token operator">=</span>hidden_units<span class="token punctuation">[</span>i_layer<span class="token punctuation">]</span><span class="token punctuation">,</span> out_features<span class="token operator">=</span>hidden_units<span class="token punctuation">[</span>i_layer<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>             tn<span class="token punctuation">.</span>init<span class="token punctuation">.</span>xavier_normal_<span class="token punctuation">(</span>hidden_layer<span class="token punctuation">.</span>weight<span class="token punctuation">)</span>             tn<span class="token punctuation">.</span>init<span class="token punctuation">.</span>uniform_<span class="token punctuation">(</span>hidden_layer<span class="token punctuation">.</span>bias<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>             self<span class="token punctuation">.</span>dense_layers<span class="token punctuation">.</span>append<span class="token punctuation">(</span>hidden_layer<span class="token punctuation">)</span>          out_layer <span class="token operator">=</span> tn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span>in_features<span class="token operator">=</span>hidden_units<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> out_features<span class="token operator">=</span>outdim<span class="token punctuation">)</span>         tn<span class="token punctuation">.</span>init<span class="token punctuation">.</span>xavier_normal_<span class="token punctuation">(</span>out_layer<span class="token punctuation">.</span>weight<span class="token punctuation">)</span>         tn<span class="token punctuation">.</span>init<span class="token punctuation">.</span>uniform_<span class="token punctuation">(</span>out_layer<span class="token punctuation">.</span>bias<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>         self<span class="token punctuation">.</span>dense_layers<span class="token punctuation">.</span>append<span class="token punctuation">(</span>out_layer<span class="token punctuation">)</span>      <span class="token keyword">def</span> <span class="token function">get_regular_sum2WB</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> regular_model<span class="token operator">=</span><span class="token string">'L2'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>         regular_w <span class="token operator">=</span> <span class="token number">0</span>         regular_b <span class="token operator">=</span> <span class="token number">0</span>         <span class="token keyword">if</span> regular_model <span class="token operator">==</span> <span class="token string">'L1'</span><span class="token punctuation">:</span>             <span class="token keyword">for</span> layer <span class="token keyword">in</span> self<span class="token punctuation">.</span>dense_layers<span class="token punctuation">:</span>                 regular_w <span class="token operator">=</span> regular_w <span class="token operator">+</span> torch<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>torch<span class="token punctuation">.</span><span class="token builtin">abs</span><span class="token punctuation">(</span>layer<span class="token punctuation">.</span>weight<span class="token punctuation">)</span><span class="token punctuation">)</span>                 regular_b <span class="token operator">=</span> regular_b <span class="token operator">+</span> torch<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>torch<span class="token punctuation">.</span><span class="token builtin">abs</span><span class="token punctuation">(</span>layer<span class="token punctuation">.</span>bias<span class="token punctuation">)</span><span class="token punctuation">)</span>         <span class="token keyword">elif</span> regular_model <span class="token operator">==</span> <span class="token string">'L2'</span><span class="token punctuation">:</span>             <span class="token keyword">for</span> layer <span class="token keyword">in</span> self<span class="token punctuation">.</span>dense_layers<span class="token punctuation">:</span>                 regular_w <span class="token operator">=</span> regular_w <span class="token operator">+</span> torch<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>torch<span class="token punctuation">.</span>mul<span class="token punctuation">(</span>layer<span class="token punctuation">.</span>weight<span class="token punctuation">,</span> layer<span class="token punctuation">.</span>weight<span class="token punctuation">)</span><span class="token punctuation">)</span>                 regular_b <span class="token operator">=</span> regular_b <span class="token operator">+</span> torch<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>torch<span class="token punctuation">.</span>mul<span class="token punctuation">(</span>layer<span class="token punctuation">.</span>bias<span class="token punctuation">,</span> layer<span class="token punctuation">.</span>bias<span class="token punctuation">)</span><span class="token punctuation">)</span>         <span class="token keyword">return</span> regular_w<span class="token punctuation">,</span> regular_b      <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> inputs<span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> training<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> mask<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>         <span class="token comment"># ------ dealing with the input data ---------------</span>         dense_in <span class="token operator">=</span> self<span class="token punctuation">.</span>dense_layers<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>         H <span class="token operator">=</span> dense_in<span class="token punctuation">(</span>inputs<span class="token punctuation">)</span>         H <span class="token operator">=</span> self<span class="token punctuation">.</span>actFunc_in<span class="token punctuation">(</span>H<span class="token punctuation">)</span>          <span class="token comment">#  ---resnet(one-step skip connection for two consecutive layers if have equal neurons）---</span>         hidden_record <span class="token operator">=</span> self<span class="token punctuation">.</span>hidden_units<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>         <span class="token keyword">for</span> i_layer <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>hidden_units<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>             H_pre <span class="token operator">=</span> H             dense_layer <span class="token operator">=</span> self<span class="token punctuation">.</span>dense_layers<span class="token punctuation">[</span>i_layer<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span>             H <span class="token operator">=</span> dense_layer<span class="token punctuation">(</span>H<span class="token punctuation">)</span>             H <span class="token operator">=</span> self<span class="token punctuation">.</span>actFunc<span class="token punctuation">(</span>H<span class="token punctuation">)</span>             <span class="token keyword">if</span> self<span class="token punctuation">.</span>hidden_units<span class="token punctuation">[</span>i_layer <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> hidden_record<span class="token punctuation">:</span>                 H <span class="token operator">=</span> H <span class="token operator">+</span> H_pre             hidden_record <span class="token operator">=</span> self<span class="token punctuation">.</span>hidden_units<span class="token punctuation">[</span>i_layer <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span>          dense_out <span class="token operator">=</span> self<span class="token punctuation">.</span>dense_layers<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>         H <span class="token operator">=</span> dense_out<span class="token punctuation">(</span>H<span class="token punctuation">)</span>         H <span class="token operator">=</span> self<span class="token punctuation">.</span>actFunc_out<span class="token punctuation">(</span>H<span class="token punctuation">)</span>         <span class="token keyword">return</span> H   <span class="token keyword">class</span> <span class="token class-name">DNN_test</span><span class="token punctuation">(</span>tn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> dim_in<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> dim_out<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> hidden_layers<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> name2Model<span class="token operator">=</span><span class="token string">'DNN'</span><span class="token punctuation">,</span> actName_in<span class="token operator">=</span><span class="token string">'tanh'</span><span class="token punctuation">,</span>                  actName_hidden<span class="token operator">=</span><span class="token string">'tanh'</span><span class="token punctuation">,</span> actName_out<span class="token operator">=</span><span class="token string">'linear'</span><span class="token punctuation">,</span> use_gpu<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> no2gpu<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>         <span class="token builtin">super</span><span class="token punctuation">(</span>DNN_test<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>         self<span class="token punctuation">.</span>name2Model <span class="token operator">=</span> name2Model         self<span class="token punctuation">.</span>dim_in <span class="token operator">=</span> dim_in         self<span class="token punctuation">.</span>dim_out <span class="token operator">=</span> dim_out         <span class="token keyword">if</span> name2Model <span class="token operator">==</span> <span class="token string">'DNN'</span><span class="token punctuation">:</span>             self<span class="token punctuation">.</span>DNN <span class="token operator">=</span> Pure_DenseNet<span class="token punctuation">(</span>indim<span class="token operator">=</span>dim_in<span class="token punctuation">,</span> outdim<span class="token operator">=</span>dim_out<span class="token punctuation">,</span> hidden_units<span class="token operator">=</span>hidden_layers<span class="token punctuation">,</span> name2Model<span class="token operator">=</span>name2Model<span class="token punctuation">,</span>                                      actName2in<span class="token operator">=</span>actName_in<span class="token punctuation">,</span> actName<span class="token operator">=</span>actName_hidden<span class="token punctuation">,</span> actName2out<span class="token operator">=</span>actName_out<span class="token punctuation">)</span>      <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x_input<span class="token punctuation">,</span> freq<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>         out <span class="token operator">=</span> self<span class="token punctuation">.</span>DNN<span class="token punctuation">(</span>x_input<span class="token punctuation">,</span> scale<span class="token operator">=</span>freq<span class="token punctuation">)</span>         <span class="token keyword">return</span> out      <span class="token keyword">def</span> <span class="token function">get_sum2wB</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>         <span class="token keyword">if</span> self<span class="token punctuation">.</span>name2Model <span class="token operator">==</span> <span class="token string">'DNN'</span> <span class="token keyword">or</span> self<span class="token punctuation">.</span>name2Model <span class="token operator">==</span> <span class="token string">'Scale_DNN'</span> <span class="token keyword">or</span> self<span class="token punctuation">.</span>name2Model <span class="token operator">==</span> <span class="token string">'Fourier_DNN'</span><span class="token punctuation">:</span>             sum2WB <span class="token operator">=</span> self<span class="token punctuation">.</span>DNN<span class="token punctuation">.</span>get_regular_sum2WB<span class="token punctuation">(</span><span class="token punctuation">)</span>         <span class="token keyword">return</span> sum2WB      <span class="token keyword">def</span> <span class="token function">cal_l2loss</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x_input<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> freq<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> y_input<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>         out <span class="token operator">=</span> self<span class="token punctuation">.</span>DNN<span class="token punctuation">(</span>x_input<span class="token punctuation">,</span> scale<span class="token operator">=</span>freq<span class="token punctuation">)</span>         squre_loss <span class="token operator">=</span> torch<span class="token punctuation">.</span>mul<span class="token punctuation">(</span>y_input <span class="token operator">-</span> out<span class="token punctuation">,</span> y_input <span class="token operator">-</span> out<span class="token punctuation">)</span>         loss <span class="token operator">=</span> torch<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>squre_loss<span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>         <span class="token keyword">return</span> loss<span class="token punctuation">,</span> out   <span class="token keyword">def</span> <span class="token function">test_DNN</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>     batch_size <span class="token operator">=</span> <span class="token number">10</span>     dim_in <span class="token operator">=</span> <span class="token number">2</span>     dim_out <span class="token operator">=</span> <span class="token number">1</span>     hidden_list <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>     freq <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>float32<span class="token punctuation">)</span>     model_name <span class="token operator">=</span> <span class="token string">'DNN'</span>     init_lr <span class="token operator">=</span> <span class="token number">0.01</span>     max_it <span class="token operator">=</span> <span class="token number">10000</span>     with_gpu <span class="token operator">=</span> <span class="token boolean">True</span>      model <span class="token operator">=</span> DNN_test<span class="token punctuation">(</span>dim_in<span class="token operator">=</span>dim_in<span class="token punctuation">,</span> dim_out<span class="token operator">=</span>dim_out<span class="token punctuation">,</span> hidden_layers<span class="token operator">=</span>hidden_list<span class="token punctuation">,</span> name2Model<span class="token operator">=</span>model_name<span class="token punctuation">,</span> actName_in<span class="token operator">=</span><span class="token string">'tanh'</span><span class="token punctuation">,</span>                 actName_hidden<span class="token operator">=</span><span class="token string">'tanh'</span><span class="token punctuation">,</span> use_gpu<span class="token operator">=</span>with_gpu<span class="token punctuation">,</span> no2gpu<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>     <span class="token keyword">if</span> with_gpu<span class="token punctuation">:</span>         model <span class="token operator">=</span> model<span class="token punctuation">.</span>cuda<span class="token punctuation">(</span>device<span class="token operator">=</span><span class="token string">'cuda:'</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      params2Net <span class="token operator">=</span> model<span class="token punctuation">.</span>DNN<span class="token punctuation">.</span>parameters<span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token comment"># 定义优化方法，并给定初始学习率</span>     <span class="token comment"># optimizer = torch.optim.SGD(params2Net, lr=init_lr)                     # SGD</span>     <span class="token comment"># optimizer = torch.optim.SGD(params2Net, lr=init_lr, momentum=0.8)       # momentum</span>     <span class="token comment"># optimizer = torch.optim.RMSprop(params2Net, lr=init_lr, alpha=0.95)     # RMSProp</span>     optimizer <span class="token operator">=</span> torch<span class="token punctuation">.</span>optim<span class="token punctuation">.</span>Adam<span class="token punctuation">(</span>params2Net<span class="token punctuation">,</span> lr<span class="token operator">=</span>init_lr<span class="token punctuation">)</span>  <span class="token comment"># Adam</span>      <span class="token comment"># 定义更新学习率的方法</span>     <span class="token comment"># scheduler = torch.optim.lr_scheduler.ExponentialLR(optimizer, gamma=0.99)</span>     <span class="token comment"># scheduler = torch.optim.lr_scheduler.LambdaLR(optimizer, lr_lambda=lambda epoch: 1/(epoch+1))</span>     scheduler <span class="token operator">=</span> torch<span class="token punctuation">.</span>optim<span class="token punctuation">.</span>lr_scheduler<span class="token punctuation">.</span>StepLR<span class="token punctuation">(</span>optimizer<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> gamma<span class="token operator">=</span><span class="token number">0.995</span><span class="token punctuation">)</span>     arr2epoch <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>     arr2loss <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>     arr2lr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>     <span class="token keyword">for</span> i_epoch <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>max_it<span class="token punctuation">)</span><span class="token punctuation">:</span>         x <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>rand<span class="token punctuation">(</span>batch_size<span class="token punctuation">,</span> dim_in<span class="token punctuation">)</span>         x <span class="token operator">=</span> x<span class="token punctuation">.</span>astype<span class="token punctuation">(</span>dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>float32<span class="token punctuation">)</span>         torch_x <span class="token operator">=</span> torch<span class="token punctuation">.</span>from_numpy<span class="token punctuation">(</span>x<span class="token punctuation">)</span>         y <span class="token operator">=</span> np<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> newshape<span class="token operator">=</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>         torch_y <span class="token operator">=</span> torch<span class="token punctuation">.</span>from_numpy<span class="token punctuation">(</span>y<span class="token punctuation">)</span>         <span class="token keyword">if</span> with_gpu<span class="token punctuation">:</span>             torch_x <span class="token operator">=</span> torch_x<span class="token punctuation">.</span>cuda<span class="token punctuation">(</span>device<span class="token operator">=</span><span class="token string">'cuda:'</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>             torch_y <span class="token operator">=</span> torch_y<span class="token punctuation">.</span>cuda<span class="token punctuation">(</span>device<span class="token operator">=</span><span class="token string">'cuda:'</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>          loss<span class="token punctuation">,</span> prediction <span class="token operator">=</span> model<span class="token punctuation">.</span>cal_l2loss<span class="token punctuation">(</span>x_input<span class="token operator">=</span>torch_x<span class="token punctuation">,</span> freq<span class="token operator">=</span>freq<span class="token punctuation">,</span> y_input<span class="token operator">=</span>torch_y<span class="token punctuation">)</span>         sum2wb <span class="token operator">=</span> model<span class="token punctuation">.</span>get_sum2wB<span class="token punctuation">(</span><span class="token punctuation">)</span>          optimizer<span class="token punctuation">.</span>zero_grad<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 求导前先清零, 只要在下一次求导前清零即可</span>         loss<span class="token punctuation">.</span>backward<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 求偏导</span>         optimizer<span class="token punctuation">.</span>step<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 更新参数</span>         scheduler<span class="token punctuation">.</span>step<span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token keyword">if</span> i_epoch <span class="token operator">%</span> <span class="token number">100</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>             <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'i_epoch --- loss:'</span><span class="token punctuation">,</span> i_epoch<span class="token punctuation">,</span> loss<span class="token punctuation">.</span>item<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>             <span class="token comment"># print("第%d个epoch的学习率：%f" % (i_epoch, optimizer.param_groups[0]['lr']))</span>             arr2loss<span class="token punctuation">.</span>append<span class="token punctuation">(</span>loss<span class="token punctuation">.</span>item<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>             arr2lr<span class="token punctuation">.</span>append<span class="token punctuation">(</span>optimizer<span class="token punctuation">.</span>param_groups<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'lr'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>      plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>     ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>gca<span class="token punctuation">(</span><span class="token punctuation">)</span>     plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>arr2loss<span class="token punctuation">,</span> <span class="token string">'b-.'</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'loss'</span><span class="token punctuation">)</span>     plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'epoch/100'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>     plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'loss'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>     plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span>fontsize<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span>     ax<span class="token punctuation">.</span>set_yscale<span class="token punctuation">(</span><span class="token string">'log'</span><span class="token punctuation">)</span>     plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token comment"># plt.cla()</span>     <span class="token comment"># plt.plot(x[:, 0], x[:, 1], y, 'b*')</span>     <span class="token comment"># plt.show()</span>   <span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>     test_DNN<span class="token punctuation">(</span><span class="token punctuation">)</span>  </code></pre> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-53347.htm">兽用疫苗厂（兽用疫苗厂家有哪些）</a></p>
                                        <p>下一个：<a href="/news/article-53878.htm">动物打疫苗多久打一次合适（动物疫苗注射后多久产生抗体）</a></p>
                                    </div>
                                        </div>
                        <div class="col-md-3">
                            <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-1-18-free-node-subscribe.htm" title="「1月18日」最高速度20.6M/S，2025年Potatso Lite每天更新免费机场订阅分享">「1月18日」最高速度20.6M/S，2025年Potatso Lite每天更新免费机场订阅分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-8-free-high-speed-nodes.htm" title="「12月8日」最高速度22.2M/S，2024年Potatso Lite每天更新免费机场订阅节点链接">「12月8日」最高速度22.2M/S，2024年Potatso Lite每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-28694.htm" title="天照爱宠动物医院怎么样（一片枫叶的拼音怎么写）">天照爱宠动物医院怎么样（一片枫叶的拼音怎么写）</a></li>
                        <li class="py-2"><a href="/news/article-24054.htm" title="动物医院纪录片 动物医院纪录片***">动物医院纪录片 动物医院纪录片***</a></li>
                        <li class="py-2"><a href="/news/article-22669.htm" title="被家猫抓伤很长一道轻微出血（被家猫抓伤出了一点点血）">被家猫抓伤很长一道轻微出血（被家猫抓伤出了一点点血）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-15-node-share.htm" title="「1月15日」最高速度19.1M/S，2025年Potatso Lite每天更新免费机场订阅分享">「1月15日」最高速度19.1M/S，2025年Potatso Lite每天更新免费机场订阅分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-9-node-share.htm" title="「2月9日」最高速度22.1M/S，2025年Potatso Lite每天更新免费机场订阅分享">「2月9日」最高速度22.1M/S，2025年Potatso Lite每天更新免费机场订阅分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-25-node-share-links.htm" title="「12月25日」最高速度22.9M/S，2024年Potatso Lite每天更新免费机场订阅分享">「12月25日」最高速度22.9M/S，2024年Potatso Lite每天更新免费机场订阅分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-16-node-share-links.htm" title="「11月16日」最高速度19.3M/S，2024年Potatso Lite每天更新免费机场订阅节点链接">「11月16日」最高速度19.3M/S，2024年Potatso Lite每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-4-free-subscribe-node.htm" title="「1月4日」最高速度18.1M/S，2025年Potatso Lite每天更新免费机场订阅分享">「1月4日」最高速度18.1M/S，2025年Potatso Lite每天更新免费机场订阅分享</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">27</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                        </div>
                    </div>
                </div>
            </div>
        </section>
        <!-- About Area End -->
    </main>
        <footer>
        <div class="footer-wrappper footer-bg">
            <!-- footer-bottom area -->
            <div class="footer-bottom-area">
                <div class="container">
                    <div class="footer-border">
                        <div class="row d-flex align-items-center">
                            <div class="col-xl-12 ">
                                <div class="footer-copy-right text-center">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                                    <p>
                                        Potatso Lite机场订阅官网 版权所有
                                        <br />
                                        Powered by WordPress
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Footer End-->
        </div>
    </footer>
    <!-- Scroll Up -->
    <div id="back-top">
        <a title="Go to Top" href="#"> <i class="fas fa-level-up-alt"></i></a>
    </div>
    <!-- JS here -->
    <script src="/assets/website/js/frontend/potatsolite/vendor/modernizr-3.5.0.min.js"></script>
    <!-- Jquery, Popper, Bootstrap -->
    <script src="/assets/website/js/frontend/potatsolite/vendor/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/popper.min.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/bootstrap.min.js"></script>
    <!-- Jquery Mobile Menu -->
    <script src="/assets/website/js/frontend/potatsolite/jquery.slicknav.min.js"></script>
    <!-- Jquery Slick , Owl-Carousel Plugins -->
    <script src="/assets/website/js/frontend/potatsolite/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/slick.min.js"></script>
    <!-- One Page, Animated-HeadLin -->
    <script src="/assets/website/js/frontend/potatsolite/wow.min.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/animated.headline.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/jquery.magnific-popup.js"></script>
    <!-- Date Picker -->
    <script src="/assets/website/js/frontend/potatsolite/gijgo.min.js"></script>
    <!-- Nice-select, sticky -->
    <script src="/assets/website/js/frontend/potatsolite/jquery.nice-select.min.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/jquery.sticky.js"></script>
    <!-- Progress -->
    <script src="/assets/website/js/frontend/potatsolite/jquery.barfiller.js"></script>
    <!-- counter , waypoint,Hover Direction -->
    <script src="/assets/website/js/frontend/potatsolite/jquery.counterup.min.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/waypoints.min.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/jquery.countdown.min.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/hover-direction-snake.min.js"></script>
    <!-- contact js -->
    <script src="/assets/website/js/frontend/potatsolite/contact.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/jquery.form.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/jquery.validate.min.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/mail-script.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/jquery.ajaxchimp.min.js"></script>
    <!-- Jquery Plugins, main Jquery -->
    <script src="/assets/website/js/frontend/potatsolite/plugins.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>