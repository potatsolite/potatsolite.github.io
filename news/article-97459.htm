<!doctype html>
<html class="no-js" lang="zh-CN">

<head>
        <link rel="canonical" href="https://potatsolite.github.io/news/article-97459.htm" />
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>Python3利用Qt5实现简易的五子棋游戏_python</title>
        <meta name="description" content="要写出一个五子棋游戏，我们最先要解决的，就是如何下子，如何判断已经五子连珠，而不是如何绘制画面，因此我们先确定棋盘 五子棋采用15*15的棋盘，因此，我们可以使用二维列表来创建一个棋盘，不妨认为0表示" />
        <link rel="icon" href="/assets/website/img/potatsolite/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Potatso Lite机场订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://potatsolite.github.io/news/article-97459.htm" />
    <meta property="og:site_name" content="Potatso Lite机场订阅官网" />
    <meta property="og:title" content="Python3利用Qt5实现简易的五子棋游戏_python" />
    <meta property="og:image" content="https://potatsolite.github.io/uploads/20240823-1/e628fb076a92ed485fb4ce2b893e4a6d.webp" />
        <meta property="og:release_date" content="2025-04-16T08:42:23" />
    <meta property="og:updated_time" content="2025-04-16T08:42:23" />
        <meta property="og:description" content="要写出一个五子棋游戏，我们最先要解决的，就是如何下子，如何判断已经五子连珠，而不是如何绘制画面，因此我们先确定棋盘 五子棋采用15*15的棋盘，因此，我们可以使用二维列表来创建一个棋盘，不妨认为0表示" />
        
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="manifest" href="site.webmanifest">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Python3利用Qt5实现简易的五子棋游戏_python">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <!-- CSS here -->
    <link rel="stylesheet" href="/assets/website/css/potatsolite/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/owl.carousel.min.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/slicknav.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/flaticon.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/progressbar_barfiller.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/gijgo.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/animate.min.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/animated-headline.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/magnific-popup.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/fontawesome-all.min.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/themify-icons.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/slick.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/nice-select.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/style.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-D5F3LS5DN7"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-D5F3LS5DN7');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- ? Preloader Start -->
    <div id="preloader-active">
        <div class="preloader d-flex align-items-center justify-content-center">
            <div class="preloader-inner position-relative">
                <div class="preloader-circle"></div>
                <div class="preloader-img pere-text">
                    <img src="/assets/website/img/potatsolite/logo/loder.png" alt="">
                </div>
            </div>
        </div>
    </div>
    <!-- Preloader Start -->
    <header>
        <!-- Header Start -->
        <div class="header-area header-transparent">
            <div class="main-header ">
                <div class="header-bottom  header-sticky">
                    <div class="container-fluid">
                        <div class="row align-items-center">
                            <!-- Logo -->
                            <div class="col-xl-2 col-lg-2">
                                <div class="logo">
                                    <a href="/">
                                                                        <span>Potatso Lite</span>
                                                                        </a>
                                </div>
                            </div>
                            <div class="col-xl-10 col-lg-10">
                                <div class="menu-wrapper d-flex align-items-center justify-content-end">
                                    <!-- Main-menu -->
                                    <div class="main-menu d-none d-lg-block">
                                        <nav>
                                            <ul id="navigation">
                                                                                                <li><a href="/">首页</a></li>
                                                                                                <li><a href="/free-nodes/">免费节点</a></li>
                                                                                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                                                <li><a href="/client.htm">客户端</a></li>
                                                                                                <li><a href="/news/">新闻资讯</a></li>
                                                                                            </ul>
                                        </nav>
                                    </div>
                                </div>
                            </div>
                            <!-- Mobile Menu -->
                            <div class="col-12">
                                <div class="mobile_menu d-block d-lg-none"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Header End -->
    </header>
    <main>
        <!--? slider Area Start-->
        <section class="slider-area slider-area2">
            <div class="slider-active">
                <!-- Single Slider -->
                <div class="single-slider slider-height2">
                    <div class="container">
                        <div class="row">
                            <div class="col-xl-8 col-lg-11 col-md-12">
                                <div class="hero__caption hero__caption2">
                                    <h1 data-animation="bounceIn" data-delay="0.2s">Python3利用Qt5实现简易的五子棋游戏_python</h1>
                                    <!-- breadcrumb Start-->
                                    <nav aria-label="breadcrumb">
                                        <ol class="breadcrumb">
                                            <li class="breadcrumb-item"><a href="/">首页</a></li>
                                            <li class="breadcrumb-item"><a href="/news/">新闻资讯</a></li>
                                            <li class="breadcrumb-item">正文</li>
                                        </ol>
                                    </nav>
                                    <!-- breadcrumb End -->
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <!--? About Area-1 Start -->
        <section class="about-area1 fix pt-10 py-5">
            <div class="support-wrapper align-items-center">
                <div class="container">
                    <div class="row">
                        <div class="col-md-9">
                                            <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				<p>要写出一个五子棋游戏，我们最先要解决的，就是如何下子，如何判断已经五子连珠，而不是如何绘制画面，因此我们先确定棋盘</p> <p>五子棋采用15*15的棋盘，因此，我们可以使用二维列表来创建一个棋盘，不妨认为0表示未放置棋子，1表示放置白子，2表示放置黑子。</p> <p>显而易见可以创建列表，<span style="color:#c0392b"><strong>注意不能使用*来复制列表</strong></span></p> <div class="ay1code"> <pre class="brush:py;">self.chess_board = [[0 for i in range(15)] for i in range(15)]</pre> </div> <p>下棋的步骤十分好做，只需要找到对应的索引进行赋值即可，下一步应该解决如何判断五子连珠的问题。</p> <p>每当我们落子结束后，应该判断是否已经完成五子连珠。对于刚放置的一颗棋子而言，可能的情况大致分为四种：</p> <p>1.水平<br />2.斜向右下<br />3.竖直<br />4.斜向右上</p> <p>要判断是否已经连珠成功，我们以刚放置的棋子为起点，先向前遍历4个棋子，并计算相同棋子的个数，一旦遇到不同的棋子，就停止，然后从起点向后遍历4个棋子，直到全部遍历完成或者棋子总数已经达到5个，就可以返回。我们只需要注意<strong>如何获得棋子的前后棋子</strong>以及<strong>棋盘的边界问题</strong>，棋子不可能超出棋盘，因此被遍历的棋子也不能超出棋盘。</p> <p>以水平为例，可以得到代码</p> <div class="ay1code"> <pre class="brush:py;">def judge_1(self,x:int,y:int) -&gt; bool:          count = 1          if self.chess_board[x][y] != 0:              for i in range(1,5):                  if y - i &gt;= 0:                      if self.chess_board[x][y] == self.chess_board[x][y-i]:                          print(x,y-i)                          count += 1                      else:                          break                  else:                      break              for i in range(1,5):                  if y + i &lt;=14:                      if self.chess_board[x][y] == self.chess_board[x][y+i]:                          print(x,y+i)                          count += 1                      else:                          break                  else:                      break          if count == 5:              return True          return False</pre> </div> <p>以相似的步骤完成其余三种判断，就已经完成了五子棋游戏的核心要素了，剩下的就需要交给PyQt5来完成游戏的绘制来完善游戏了。</p> <p>我们创建一个类来继承QWidget类，创建一个窗口，之后我们需要创建几个属性来完成储存我们的数据信息</p> <div class="ay1code"> <pre class="brush:py;">#棋子的坐标  self.x = -1  self.y = -1  #区分玩家  #开始标签  self.flag = False  #储存已经下好的白子  self.white_chess = []  #储存已经下好的黑子  self.black_chess = []</pre> </div> <p>我们已经可以开始绘制棋盘，在Qt5中，如果我们需要进行绘制，我们应该<strong>重写</strong>paintEvent方法，这个方法会由程序自动调用执行。创建一个QPainter对象，将需要绘制的内容用begin与end方法包裹起来，就可以完成绘制。</p> <p>我们用drawLine方法来绘制线条，用drawEllipse方法来绘制棋子，使用setPen来更改线条样式，setBrush来更改棋子样式。</p> <p>得到代码<strong>（本段代码有参考他人代码，这是我第一次接触Qt的绘制）</strong></p> <p>--------------------GUI中的x轴竖直向下，y轴水平向右，因此绘制棋子时的x与y需要颠倒---------------</p> <div class="ay1code"> <pre class="brush:py;">#绘制棋盘与棋子      def paintEvent(self, e) -&gt; None:          qp = QPainter()          qp.begin(self)          qp.fillRect(self.rect(), QColor("light blue"))          qp.drawRect(self.rect())          qp.setBackground(QColor("yellow"))          qp.setPen(QPen(QColor(0, 0, 0), 2, Qt.SolidLine))          for i in range(15):              qp.drawLine(QPoint(30, 30 + 30 * i), QPoint(450, 30 + 30 * i))          for i in range(15):              qp.drawLine(QPoint(30 + 30 * i, 30), QPoint(30 + 30 * i, 450))          qp.setBrush(QColor(0, 0, 0))          key_points = [(3, 3), (11, 3), (3, 11), (11, 11), (7, 7)]          if len(self.black_chess) != 0:              for t in self.black_chess:                  #画黑子                  qp.drawEllipse(QPoint(30 + 30 * t[1], 30 + 30 * t[0]), 6, 6)          for t in key_points:              #棋盘的5个定点              qp.drawEllipse(QPoint(30 + 30 * t[0], 30 + 30 * t[1]), 3, 3)          qp.setBrush(QColor(255,255,255))          if len(self.white_chess) != 0:              for t in self.white_chess:                  #画白子                  qp.drawEllipse(QPoint(30 + 30 * t[1], 30 + 30 * t[0]), 6, 6)          qp.end()</pre> </div> <p>另一个需要在GUI中解决的问题就是，如何获取要下的棋子的坐标?我们可以通过重写鼠标事件来解决，重写单机事件mousePressEvent，并修改棋子的x坐标与y坐标即可，另外，用户不可能每次都恰巧点到我们规定的坐标点上，因此需要给出一个大致范围判断，这里我的方式是先获取坐标，然后根据坐标找到距离最近的点</p> <div class="ay1code"> <pre class="brush:py;">def mousePressEvent(self, e) -&gt; None:          if e.buttons() == QtCore.Qt.LeftButton:              if e.x() &gt; 15 and e.x() &lt; 465 and e.y() &gt; 15 and e.y() &lt; 465:                  x = e.x()/30 - e.x()//30                  y = e.y()/30 - e.y()//30                  self.y = (e.x()-30)//30 if x &lt; 0.5 else (e.x()-30)//30 + 1                  self.x = (e.y()-30)//30 if y &lt; 0.5 else (e.y()-30)//30 + 1                  if self.flag:                      print(self.x,self.y)                      if self.player % 2 == 1:                          if goBang.put_white_chess(self.x,self.y):                              self.player += 1                               print('黑子行动')                          else:                              print('白子行动')                          if goBang.judge(self.x,self.y):                              msg_box = QMessageBox(QMessageBox.Information, '提示', '白子获胜！')                              msg_box.exec_()                      else:                          if goBang.put_black_chess(self.x,self.y):                              self.player += 1                              print('白子行动')                          else:                              print('黑子行动')                          if goBang.judge(self.x,self.y):                              msg_box = QMessageBox(QMessageBox.Information, '提示', '黑子获胜！')                              msg_box.exec_()</pre> </div> <p>每当游戏完成，我们应该可以清空棋盘，也就是将所有储存数据的变量都重新初始化再重绘棋盘</p> <div class="ay1code"> <pre class="brush:py;">#清除棋盘，重开游戏      def clear(self) -&gt; None:          self.x = -1          self.y = -1          self.player = 0          self.flag = False          self.white_chess = []          self.black_chess = []          self.chess_board = [[0 for i in range(15)] for i in range(15)]          self.update()</pre> </div> <p>这样就大致结束了！！</p> <p>下面是全部代码：</p> <div class="ay1code"> <pre class="brush:py;">from PyQt5 import *  from PyQt5 import QtCore  from PyQt5.QtWidgets import *  from PyQt5.QtGui import *  from PyQt5.QtCore import *  import sys     class GoBang(QWidget):      #初始化棋盘      def __init__(self):          super().__init__()          self.setWindowTitle('五子棋Hi~ o(*￣▽￣*)ブ')          self.x = -1          self.y = -1          #区分玩家          self.player = 0          #开始标签          self.flag = False          #储存已经下好的白子          self.white_chess = []          #储存已经下好的黑子          self.black_chess = []          self.setFixedSize(800,600)          self.chess_board = [[0 for i in range(15)] for i in range(15)]          btn1 = QPushButton('开始',self)          btn1.setGeometry(500,100,50,30)          btn1.clicked.connect(self.setFlag)          btn2 = QPushButton('重开',self)          btn2.setGeometry(550,100,50,30)          btn2.clicked.connect(self.clear)          self.show()            #绘制棋盘与棋子      def paintEvent(self, e) -&gt; None:          qp = QPainter()          qp.begin(self)          qp.fillRect(self.rect(), QColor("light blue"))          qp.drawRect(self.rect())          qp.setBackground(QColor("yellow"))          qp.setPen(QPen(QColor(0, 0, 0), 2, Qt.SolidLine))          for i in range(15):              qp.drawLine(QPoint(30, 30 + 30 * i), QPoint(450, 30 + 30 * i))          for i in range(15):              qp.drawLine(QPoint(30 + 30 * i, 30), QPoint(30 + 30 * i, 450))          qp.setBrush(QColor(0, 0, 0))          key_points = [(3, 3), (11, 3), (3, 11), (11, 11), (7, 7)]          if len(self.black_chess) != 0:              for t in self.black_chess:                  #画黑子                  qp.drawEllipse(QPoint(30 + 30 * t[1], 30 + 30 * t[0]), 6, 6)          for t in key_points:              #棋盘的5个定点              qp.drawEllipse(QPoint(30 + 30 * t[0], 30 + 30 * t[1]), 3, 3)          qp.setBrush(QColor(255,255,255))          if len(self.white_chess) != 0:              for t in self.white_chess:                  #画白子                  qp.drawEllipse(QPoint(30 + 30 * t[1], 30 + 30 * t[0]), 6, 6)          qp.end()         #更改标签，开始游戏      def setFlag(self) -&gt; None:          self.flag = True         def mousePressEvent(self, e) -&gt; None:          if e.buttons() == QtCore.Qt.LeftButton:              if e.x() &gt; 15 and e.x() &lt; 465 and e.y() &gt; 15 and e.y() &lt; 465:                  x = e.x()/30 - e.x()//30                  y = e.y()/30 - e.y()//30                  self.y = (e.x()-30)//30 if x &lt; 0.5 else (e.x()-30)//30 + 1                  self.x = (e.y()-30)//30 if y &lt; 0.5 else (e.y()-30)//30 + 1                  if self.flag:                      print(self.x,self.y)                      if self.player % 2 == 1:                          if goBang.put_white_chess(self.x,self.y):                              self.player += 1                               print('黑子行动')                          else:                              print('白子行动')                          if goBang.judge(self.x,self.y):                              msg_box = QMessageBox(QMessageBox.Information, '提示', '白子获胜！')                              msg_box.exec_()                      else:                          if goBang.put_black_chess(self.x,self.y):                              self.player += 1                              print('白子行动')                          else:                              print('黑子行动')                          if goBang.judge(self.x,self.y):                              msg_box = QMessageBox(QMessageBox.Information, '提示', '黑子获胜！')                              msg_box.exec_()                       #下白子      def put_white_chess(self,x:int,y:int) -&gt; bool:          if self.chess_board[x][y] != 0:              msg_box = QMessageBox(QMessageBox.Information, '提示', '这个位置已经有棋子了!')              msg_box.exec_()              return False          else:              self.chess_board[x][y] = 1              self.white_chess.append((x,y))              self.update()              return True         #下黑子      def put_black_chess(self,x:int,y:int) -&gt; bool:          if self.chess_board[x][y] != 0:              msg_box = QMessageBox(QMessageBox.Information, '提示', '这个位置已经有棋子了!')              msg_box.exec_()              return False          else:              self.chess_board[x][y] = 2              self.black_chess.append((x,y))              self.update()              return True         #清除棋盘，重开游戏      def clear(self) -&gt; None:          self.x = -1          self.y = -1          self.player = 0          self.flag = False          self.white_chess = []          self.black_chess = []          self.chess_board = [[0 for i in range(15)] for i in range(15)]          self.update()         #判断是否已经五子连珠      def judge(self,x:int,y:int) -&gt; bool:          if self.judge_1(x,y) or self.judge_2(x,y) or self.judge_3(x,y) or self.judge_4(x,y):              return True          return False         #判断横线      def judge_1(self,x:int,y:int) -&gt; bool:          count = 1          if self.chess_board[x][y] != 0:              for i in range(1,5):                  if y - i &gt;= 0:                      if self.chess_board[x][y] == self.chess_board[x][y-i]:                          print(x,y-i)                          count += 1                      else:                          break                  else:                      break              for i in range(1,5):                  if y + i &lt;=14:                      if self.chess_board[x][y] == self.chess_board[x][y+i]:                          print(x,y+i)                          count += 1                      else:                          break                  else:                      break          if count == 5:              return True          return False         #判断右下线      def judge_2(self,x:int,y:int) -&gt; bool:          count = 1          if self.chess_board[x][y] != 0:              for i in range(1,5):                  if x-i &gt;= 0 and y - i &gt;= 0:                      if self.chess_board[x][y] == self.chess_board[x-i][y-i]:                          print(x-i,y-i)                          count += 1                      else:                          break                  else:                      break              for i in range(1,5):                  if x + i &lt;= 14 and y + i &lt;= 14:                      if self.chess_board[x][y] == self.chess_board[x+i][y+i]:                          print(x+i,y+i)                          count += 1                      else:                          break                  else:                      break          if count == 5:              return True          return False         #判断竖线      def judge_3(self,x:int,y:int) -&gt; bool:          count = 1          if self.chess_board[x][y] != 0:              for i in range(1,5):                  if x - i &gt;= 0:                      if self.chess_board[x][y] == self.chess_board[x-i][y]:                          print(x-i,y)                          count += 1                      else:                          break                  else:                      break              for i in range(1,5):                  if x + i &lt;= 14:                      if self.chess_board[x][y] == self.chess_board[x+i][y]:                          print(x+i,y)                          count += 1                      else:                          break                  else:                      break          if count == 5:              return True          return False         #判断右上线      def judge_4(self,x:int,y:int) -&gt; bool:          count = 1          if self.chess_board[x][y] != 0:              for i in range(1,5):                  if x - i &gt;= 0 and y + i &lt;= 14:                      if self.chess_board[x][y] == self.chess_board[x-i][y+i]:                          print(x-i,y+i)                          count += 1                      else:                          break                  else:                      break              for i in range(1,5):                  if x + i &lt;= 14 and y - i &gt;= 0:                      if self.chess_board[x][y] == self.chess_board[x+i][y-i]:                          print(x+i,y-i)                          count += 1                      else:                          break                  else:                      break          if count == 5:              return True          return False     #程序入口  if __name__ == '__main__':        app = QApplication(sys.argv)        goBang = GoBang()      sys.exit(app.exec_())</pre> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-96756.htm">怎么能开宠物店赚钱（怎么开宠物店利润多少）</a></p>
                                        <p>下一个：<a href="/news/article-97460.htm">动物防疫站可以给人打狂犬疫苗吗（动物防疫站能给人打狂犬疫苗吗）</a></p>
                                    </div>
                                        </div>
                        <div class="col-md-3">
                            <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-3-31-free-node-subscribe.htm" title="「3月31日」最高速度22.6M/S，2025年Potatso Lite每天更新免费机场订阅分享">「3月31日」最高速度22.6M/S，2025年Potatso Lite每天更新免费机场订阅分享</a></li>
                        <li class="py-2"><a href="/news/article-69926.htm" title="开个宠物粮加工厂怎么样赚钱吗知乎 开个宠物粮加工厂怎么样赚钱吗知乎">开个宠物粮加工厂怎么样赚钱吗知乎 开个宠物粮加工厂怎么样赚钱吗知乎</a></li>
                        <li class="py-2"><a href="/news/article-66711.htm" title="C#面向抽象编程第二讲">C#面向抽象编程第二讲</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-20-node-share.htm" title="「3月20日」最高速度18.8M/S，2025年Potatso Lite每天更新免费机场订阅分享">「3月20日」最高速度18.8M/S，2025年Potatso Lite每天更新免费机场订阅分享</a></li>
                        <li class="py-2"><a href="/news/article-77282.htm" title="附近免费领养狗狗电话 附近免费领养狗狗电话号码">附近免费领养狗狗电话 附近免费领养狗狗电话号码</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-15-free-subscribe-node.htm" title="「3月15日」最高速度22M/S，2025年Potatso Lite每天更新免费机场订阅分享">「3月15日」最高速度22M/S，2025年Potatso Lite每天更新免费机场订阅分享</a></li>
                        <li class="py-2"><a href="/news/article-73220.htm" title="厦门同安动物救助站 厦门同安动物救助站电话号码">厦门同安动物救助站 厦门同安动物救助站电话号码</a></li>
                        <li class="py-2"><a href="/news/article-81443.htm" title="宠物粮代理怎么拿货便宜一点（宠物粮进货平台）">宠物粮代理怎么拿货便宜一点（宠物粮进货平台）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-10-node-share-links.htm" title="「4月10日」最高速度20.9M/S，2025年Potatso Lite每天更新免费机场订阅分享">「4月10日」最高速度20.9M/S，2025年Potatso Lite每天更新免费机场订阅分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-4-free-node-subscribe.htm" title="「4月4日」最高速度18.7M/S，2025年Potatso Lite每天更新免费机场订阅分享">「4月4日」最高速度18.7M/S，2025年Potatso Lite每天更新免费机场订阅分享</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">51</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">89</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                        </div>
                    </div>
                </div>
            </div>
        </section>
        <!-- About Area End -->
    </main>
        <footer>
        <div class="footer-wrappper footer-bg">
            <!-- footer-bottom area -->
            <div class="footer-bottom-area">
                <div class="container">
                    <div class="footer-border">
                        <div class="row d-flex align-items-center">
                            <div class="col-xl-12 ">
                                <div class="footer-copy-right text-center">
                                                        <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                                    <p>
                                        Potatso Lite机场订阅官网 版权所有
                                        <br />
                                        Powered by WordPress
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Footer End-->
        </div>
    </footer>
    <!-- Scroll Up -->
    <div id="back-top">
        <a title="Go to Top" href="#"> <i class="fas fa-level-up-alt"></i></a>
    </div>
    <!-- JS here -->
    <script src="/assets/website/js/frontend/potatsolite/vendor/modernizr-3.5.0.min.js"></script>
    <!-- Jquery, Popper, Bootstrap -->
    <script src="/assets/website/js/frontend/potatsolite/vendor/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/popper.min.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/bootstrap.min.js"></script>
    <!-- Jquery Mobile Menu -->
    <script src="/assets/website/js/frontend/potatsolite/jquery.slicknav.min.js"></script>
    <!-- Jquery Slick , Owl-Carousel Plugins -->
    <script src="/assets/website/js/frontend/potatsolite/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/slick.min.js"></script>
    <!-- One Page, Animated-HeadLin -->
    <script src="/assets/website/js/frontend/potatsolite/wow.min.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/animated.headline.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/jquery.magnific-popup.js"></script>
    <!-- Date Picker -->
    <script src="/assets/website/js/frontend/potatsolite/gijgo.min.js"></script>
    <!-- Nice-select, sticky -->
    <script src="/assets/website/js/frontend/potatsolite/jquery.nice-select.min.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/jquery.sticky.js"></script>
    <!-- Progress -->
    <script src="/assets/website/js/frontend/potatsolite/jquery.barfiller.js"></script>
    <!-- counter , waypoint,Hover Direction -->
    <script src="/assets/website/js/frontend/potatsolite/jquery.counterup.min.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/waypoints.min.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/jquery.countdown.min.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/hover-direction-snake.min.js"></script>
    <!-- contact js -->
    <script src="/assets/website/js/frontend/potatsolite/contact.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/jquery.form.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/jquery.validate.min.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/mail-script.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/jquery.ajaxchimp.min.js"></script>
    <!-- Jquery Plugins, main Jquery -->
    <script src="/assets/website/js/frontend/potatsolite/plugins.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>