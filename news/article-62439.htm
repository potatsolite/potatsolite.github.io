<!doctype html>
<html class="no-js" lang="zh-CN">

<head>
        <link rel="canonical" href="https://potatsolite.github.io/news/article-62439.htm" />
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>Java连接MySQL数据——命令行程序</title>
        <meta name="description" content="SQL编程包括两种形式，一种是过程化编程，主要通过数据库交互式工具，通过存储过程、触发器、函数等形式的编程；另一种是嵌入式SQL编程，将SQL语句嵌入到高级开发语言，完成数据的各种操作。 命令行程序由" />
        <link rel="icon" href="/assets/website/img/potatsolite/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Potatso Lite机场订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://potatsolite.github.io/news/article-62439.htm" />
    <meta property="og:site_name" content="Potatso Lite机场订阅官网" />
    <meta property="og:title" content="Java连接MySQL数据——命令行程序" />
    <meta property="og:image" content="https://potatsolite.github.io/uploads/20240823-1/de6bcb611f9d849cfdee5a5924474c75.webp" />
        <meta property="og:release_date" content="2025-02-24T09:18:14" />
    <meta property="og:updated_time" content="2025-02-24T09:18:14" />
        <meta property="og:description" content="SQL编程包括两种形式，一种是过程化编程，主要通过数据库交互式工具，通过存储过程、触发器、函数等形式的编程；另一种是嵌入式SQL编程，将SQL语句嵌入到高级开发语言，完成数据的各种操作。 命令行程序由" />
        
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="manifest" href="site.webmanifest">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Java连接MySQL数据——命令行程序">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <!-- CSS here -->
    <link rel="stylesheet" href="/assets/website/css/potatsolite/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/owl.carousel.min.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/slicknav.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/flaticon.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/progressbar_barfiller.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/gijgo.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/animate.min.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/animated-headline.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/magnific-popup.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/fontawesome-all.min.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/themify-icons.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/slick.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/nice-select.css">
    <link rel="stylesheet" href="/assets/website/css/potatsolite/style.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-D5F3LS5DN7"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-D5F3LS5DN7');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- ? Preloader Start -->
    <div id="preloader-active">
        <div class="preloader d-flex align-items-center justify-content-center">
            <div class="preloader-inner position-relative">
                <div class="preloader-circle"></div>
                <div class="preloader-img pere-text">
                    <img src="/assets/website/img/potatsolite/logo/loder.png" alt="">
                </div>
            </div>
        </div>
    </div>
    <!-- Preloader Start -->
    <header>
        <!-- Header Start -->
        <div class="header-area header-transparent">
            <div class="main-header ">
                <div class="header-bottom  header-sticky">
                    <div class="container-fluid">
                        <div class="row align-items-center">
                            <!-- Logo -->
                            <div class="col-xl-2 col-lg-2">
                                <div class="logo">
                                    <a href="/">
                                                                        <span>Potatso Lite</span>
                                                                        </a>
                                </div>
                            </div>
                            <div class="col-xl-10 col-lg-10">
                                <div class="menu-wrapper d-flex align-items-center justify-content-end">
                                    <!-- Main-menu -->
                                    <div class="main-menu d-none d-lg-block">
                                        <nav>
                                            <ul id="navigation">
                                                                                                <li><a href="/">首页</a></li>
                                                                                                <li><a href="/free-nodes/">免费节点</a></li>
                                                                                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                                                <li><a href="/client.htm">客户端</a></li>
                                                                                                <li><a href="/news/">新闻资讯</a></li>
                                                                                            </ul>
                                        </nav>
                                    </div>
                                </div>
                            </div>
                            <!-- Mobile Menu -->
                            <div class="col-12">
                                <div class="mobile_menu d-block d-lg-none"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Header End -->
    </header>
    <main>
        <!--? slider Area Start-->
        <section class="slider-area slider-area2">
            <div class="slider-active">
                <!-- Single Slider -->
                <div class="single-slider slider-height2">
                    <div class="container">
                        <div class="row">
                            <div class="col-xl-8 col-lg-11 col-md-12">
                                <div class="hero__caption hero__caption2">
                                    <h1 data-animation="bounceIn" data-delay="0.2s">Java连接MySQL数据——命令行程序</h1>
                                    <!-- breadcrumb Start-->
                                    <nav aria-label="breadcrumb">
                                        <ol class="breadcrumb">
                                            <li class="breadcrumb-item"><a href="/">首页</a></li>
                                            <li class="breadcrumb-item"><a href="/news/">新闻资讯</a></li>
                                            <li class="breadcrumb-item">正文</li>
                                        </ol>
                                    </nav>
                                    <!-- breadcrumb End -->
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <!--? About Area-1 Start -->
        <section class="about-area1 fix pt-10 py-5">
            <div class="support-wrapper align-items-center">
                <div class="container">
                    <div class="row">
                        <div class="col-md-9">
                                            <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <p>SQL编程包括两种形式，一种是过程化编程，主要通过数据库交互式工具，通过存储过程、触发器、函数等形式的编程；另一种是嵌入式SQL编程，将SQL语句嵌入到高级开发语言，完成数据的各种操作。<br /> 命令行程序由于对外依赖的jar包少易上手，通常作为教学示例程序。我们通过命令行 程序介绍嵌入式SQL开发过程，示例开发工具选择idea。</p> <h2> <a id="_3" rel="nofollow"></a>创建表</h2> <p>通过SQLyol建立表student；</p> <pre><code class="prism language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> student<span class="token punctuation">(</span> Sno <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span> Sname <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Ssex   <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  Sage   <span class="token keyword">INT</span><span class="token punctuation">,</span> Sdept <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> </code></pre> <p>插入数据：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/5ecac25ec386dbf74a4ab30246204044.jpg" alt="Java连接MySQL数据——命令行程序"></p> <h2> <a id="_20" rel="nofollow"></a>创建命令行程序</h2> <p>新建一个命令行程序，打开idea工具，选择：File—&gt;New—&gt;Project，弹出对话框，如下图所示<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/cf90d7e1bba977d5111308eaf55b6e3d.jpg" alt="Java连接MySQL数据——命令行程序"><br /> 直接点击Next按钮，进入到下一个Tab页，勾选Create project from template，选择Command line App<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/9703506c6192b185f7bf7736cc7f0a55.jpg" alt="Java连接MySQL数据——命令行程序"><br /> 点击Next进入下一个Tab页，如图所示<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/148da70a49ed2d2bdb86700b132b7d11.jpg" alt="Java连接MySQL数据——命令行程序"><br /> 输入项目名称，选择项目路径，书写基本包包名，基本包名一般由com+域名组成，确保其唯一性。填写完成后，点击finish按钮，完成命令行程序的创建，创建完成的页面如下图所示<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/3647fd665972113800bd3e8927a70277.jpg" alt="Java连接MySQL数据——命令行程序"></p> <h2> <a id="jar_29" rel="nofollow"></a>下载并导入jar包</h2> <p>下载mysql-connector-java-8.0.13.jar;<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://mvnrepository.com/artifact/mysql/mysql-connector-java"  rel="nofollow">下载地址</a>,，将jar包存入本地目录。<br /> 项目中导入Jar包。点击File—&gt;ProjectStructure 打开对话框，如下图所示<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/a51add44138dd414a5038bf56047da87.jpg" alt="Java连接MySQL数据——命令行程序"><br /> 点击右侧“+”，选择“JARs or directories”，弹出对话框，选择刚才下载的jar包，如下图所示：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/0df2273cf5d364d4ab2937a57f925c6c.jpg" alt="Java连接MySQL数据——命令行程序"><br /> 点击OK，完成jar包的导入，导入后就可以在工程中看到导入的jar包，如下图<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/6f8a92dfa84bf85e481315b26f1228f0.jpg" alt="Java连接MySQL数据——命令行程序"></p> <h2> <a id="_37" rel="nofollow"></a>创建工具包</h2> <p>在开始练习时，就应该形成一个良好的习惯，将不同类型的类放置在不同包中，创建工具包util，用存放公共使用的工具类，这里的类一般使用静态方法。<br /> 创建数据库连接类：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/726c0daf2f2bd3d5ad16f0b4abcc67dd.jpg" alt="Java连接MySQL数据——命令行程序"><br /> 代码如下：</p> <pre><code class="prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MySqlConnection</span> <span class="token punctuation">{<!-- --></span>     <span class="token keyword">private</span> <span class="token keyword">static</span> Connection con<span class="token operator">=</span>null<span class="token punctuation">;</span>     <span class="token keyword">private</span> <span class="token keyword">static</span> String driveName <span class="token operator">=</span><span class="token string">"com.mysql.cj.jdbc.Driver"</span><span class="token punctuation">;</span>     <span class="token keyword">private</span> <span class="token keyword">static</span> String url <span class="token operator">=</span> <span class="token string">"jdbc:mysql://127.0.0.1:3306/sl?serverTimezone=GMT%2b8"</span><span class="token punctuation">;</span>     <span class="token keyword">private</span> <span class="token keyword">static</span> String user<span class="token operator">=</span><span class="token string">"root"</span><span class="token punctuation">;</span>     <span class="token keyword">private</span> <span class="token keyword">static</span> String pws<span class="token operator">=</span><span class="token string">"root"</span><span class="token punctuation">;</span>          <span class="token keyword">private</span>  <span class="token function">MySqlConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> Connection <span class="token function">getCon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>        <span class="token keyword">if</span><span class="token punctuation">(</span>con<span class="token operator">==</span>null<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>            con <span class="token operator">=</span> <span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> con<span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token keyword">private</span> <span class="token keyword">static</span> Connection <span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         Connection connection <span class="token operator">=</span> null<span class="token punctuation">;</span>         <span class="token keyword">try</span> <span class="token punctuation">{<!-- --></span>             Class<span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>driveName<span class="token punctuation">)</span><span class="token punctuation">;</span>             connection <span class="token operator">=</span> DriverManager<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>user<span class="token punctuation">,</span>pws<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> <span class="token operator">|</span> SQLException e<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{<!-- --></span>             <span class="token keyword">return</span> connection<span class="token punctuation">;</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <p>这里的方法使用static 修饰代表是静态方法，该方法属于类，而不是对象；<br /> 创建SQL执行包装类，完成数据库各种方法的执行，这里仅写了一个返回ResultSet方法，代码如下：</p> <pre><code class="prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MysqlHelp</span> <span class="token punctuation">{<!-- --></span>     <span class="token keyword">public</span>  <span class="token keyword">static</span> ResultSet <span class="token function">query</span><span class="token punctuation">(</span>String sql<span class="token punctuation">)</span>  <span class="token punctuation">{<!-- --></span>         Connection con <span class="token operator">=</span> MySqlConnection<span class="token punctuation">.</span><span class="token function">getCon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         ResultSet result <span class="token operator">=</span>null<span class="token punctuation">;</span>          <span class="token keyword">try</span> <span class="token punctuation">{<!-- --></span>             Statement stmt <span class="token operator">=</span> con<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             result<span class="token operator">=</span> stmt<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{<!-- --></span>             <span class="token keyword">return</span> result<span class="token punctuation">;</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <h2> <a id="_93" rel="nofollow"></a>创建实体类</h2> <p>创建pojo包，在该包下创建实体类Student，实体类只包含私有属性和get、set方法，为了简单期间，增加了一个lombok包，就不需要写get、set方法。lombok jar的安装，File—&gt;Settings ，打开对话框如下图：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/fbbb9e3bb5a6b6ffb25a29b6366b702b.jpg" alt="Java连接MySQL数据——命令行程序"><br /> 在实体类上加主解符“@Data”即可。当然也可以不用Lombok，老老实实的写get、set方法也可以，使用lombok代码如下</p> <pre><code class="prism language-java"><span class="token annotation punctuation">@Data</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token punctuation">{<!-- --></span>     <span class="token keyword">private</span> String sno<span class="token punctuation">;</span>     <span class="token keyword">private</span> String sName<span class="token punctuation">;</span>     <span class="token keyword">private</span> String sSex<span class="token punctuation">;</span>     <span class="token keyword">private</span> <span class="token keyword">int</span> sAge<span class="token punctuation">;</span>     <span class="token keyword">private</span> String sDept<span class="token punctuation">;</span>      <span class="token keyword">public</span> <span class="token function">Student</span><span class="token punctuation">(</span>String sno<span class="token punctuation">,</span>String name<span class="token punctuation">,</span> String sex<span class="token punctuation">,</span><span class="token keyword">int</span> age<span class="token punctuation">,</span>String dept<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setSno</span><span class="token punctuation">(</span>sno<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setSAge</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setSName</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setSDept</span><span class="token punctuation">(</span>dept<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setSSex</span><span class="token punctuation">(</span>sex<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token keyword">public</span> String <span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         <span class="token keyword">return</span> <span class="token string">"学号："</span><span class="token operator">+</span>sno <span class="token operator">+</span><span class="token string">"姓名："</span><span class="token operator">+</span>sName<span class="token operator">+</span><span class="token string">"性别："</span><span class="token operator">+</span>sSex<span class="token operator">+</span><span class="token string">"年龄："</span><span class="token operator">+</span><span class="token string">"院系："</span><span class="token operator">+</span>sDept<span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <p>为了演示方便，在实体类中增加了一个构造函数和字符串的输出，实体类当然完全没有这两个方法。</p> <h2> <a id="_121" rel="nofollow"></a>创建持久化层</h2> <p>创建一个dao包，包中创建类StudentDao，完成数据的存取操作，代码如下</p> <pre><code class="prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StudentDao</span> <span class="token punctuation">{<!-- --></span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getStudentInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         String sql<span class="token operator">=</span><span class="token string">"SELECT Sno AS sno,Sname AS NAME,Ssex AS sex,Sage AS age,Sdept AS dept FROM student"</span><span class="token punctuation">;</span>          ResultSet result <span class="token operator">=</span> MysqlHelp<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">if</span><span class="token punctuation">(</span>result<span class="token operator">!=</span>null<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                 <span class="token keyword">try</span> <span class="token punctuation">{<!-- --></span>                     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>result<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>                     String sno <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"sno"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     String name <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     <span class="token keyword">int</span> age <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token string">"age"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     String dept <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"dept"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     String sex <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"sex"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     Student student <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span>sno<span class="token punctuation">,</span> name<span class="token punctuation">,</span> sex<span class="token punctuation">,</span> age<span class="token punctuation">,</span> dept<span class="token punctuation">)</span><span class="token punctuation">;</span>                     System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>student<span class="token punctuation">.</span><span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                     e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token punctuation">}</span>              <span class="token punctuation">}</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span> </code></pre> <p>这里调用了上面定义的 MysqlHelp的query方法，完成数据的存取及结构化数据向面向对象实体类的转换。</p> <h2> <a id="_151" rel="nofollow"></a>业务层调用</h2> <p>打开main函数，写入下代码，完成dao层方法调用</p> <pre><code class="prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{<!-- --></span>      <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         StudentDao student <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StudentDao</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         student<span class="token punctuation">.</span><span class="token function">getStudentInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <p>执行结果如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/93d1f37654b8cb4fda532a28c969f206.jpg" alt="Java连接MySQL数据——命令行程序"></p> <h2> <a id="_166" rel="nofollow"></a>总结</h2> <p>在这里尽量使用面向对象的封装技术，将每个类的职责单一化，而不是把所有代码写到一起的做法，尽管写到一起，代码更好读，而且简单。另外思考一个问题，我们能不能把结构化的数据自动转换为实体对象，以及数据库的连接、SQL的执行交给第三方的程序去做，简化我们的代码？答案是肯定的，Mybaits、hibernet就是完成这些工作的框架</p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-61856.htm">太原市领养狗在哪（太原哪有领养狗狗的地方）</a></p>
                                        <p>下一个：<a href="/news/article-62440.htm">宠物美容师待遇如何（宠物美容师工资待遇）</a></p>
                                    </div>
                                        </div>
                        <div class="col-md-3">
                            <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-59513.htm" title="成都宠物托运平台哪家好用点（成都宠物物流）">成都宠物托运平台哪家好用点（成都宠物物流）</a></li>
                        <li class="py-2"><a href="/news/article-32031.htm" title="领养宠物协议书范本图片高清大图（宠物领养协议免费下载）">领养宠物协议书范本图片高清大图（宠物领养协议免费下载）</a></li>
                        <li class="py-2"><a href="/news/article-58362.htm" title="数据库常用函数_在线工具">数据库常用函数_在线工具</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-27-free-node-subscribe-links.htm" title="「12月27日」最高速度21.4M/S，2024年Potatso Lite每天更新免费机场订阅分享">「12月27日」最高速度21.4M/S，2024年Potatso Lite每天更新免费机场订阅分享</a></li>
                        <li class="py-2"><a href="/news/article-49653.htm" title="梦见抱住别的女人是什么意思（梦见抱着别人的女人是什么意思）">梦见抱住别的女人是什么意思（梦见抱着别人的女人是什么意思）</a></li>
                        <li class="py-2"><a href="/news/article-55537.htm" title="动物疫苗的种类及使用方法（动物疫苗接种方法有哪些）">动物疫苗的种类及使用方法（动物疫苗接种方法有哪些）</a></li>
                        <li class="py-2"><a href="/news/article-42707.htm" title="在Java中搜索字符串中的字符。">在Java中搜索字符串中的字符。</a></li>
                        <li class="py-2"><a href="/news/article-57795.htm" title="开宠物食品店需要多少钱 开宠物食品店需要多少钱一个月">开宠物食品店需要多少钱 开宠物食品店需要多少钱一个月</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-8-free-node-subscribe.htm" title="「1月8日」最高速度21.7M/S，2025年Potatso Lite每天更新免费机场订阅分享">「1月8日」最高速度21.7M/S，2025年Potatso Lite每天更新免费机场订阅分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-20-free-high-speed-nodes.htm" title="「2月20日」最高速度20.8M/S，2025年Potatso Lite每天更新免费机场订阅分享">「2月20日」最高速度20.8M/S，2025年Potatso Lite每天更新免费机场订阅分享</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">78</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                        </div>
                    </div>
                </div>
            </div>
        </section>
        <!-- About Area End -->
    </main>
        <footer>
        <div class="footer-wrappper footer-bg">
            <!-- footer-bottom area -->
            <div class="footer-bottom-area">
                <div class="container">
                    <div class="footer-border">
                        <div class="row d-flex align-items-center">
                            <div class="col-xl-12 ">
                                <div class="footer-copy-right text-center">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                                    <p>
                                        Potatso Lite机场订阅官网 版权所有
                                        <br />
                                        Powered by WordPress
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Footer End-->
        </div>
    </footer>
    <!-- Scroll Up -->
    <div id="back-top">
        <a title="Go to Top" href="#"> <i class="fas fa-level-up-alt"></i></a>
    </div>
    <!-- JS here -->
    <script src="/assets/website/js/frontend/potatsolite/vendor/modernizr-3.5.0.min.js"></script>
    <!-- Jquery, Popper, Bootstrap -->
    <script src="/assets/website/js/frontend/potatsolite/vendor/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/popper.min.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/bootstrap.min.js"></script>
    <!-- Jquery Mobile Menu -->
    <script src="/assets/website/js/frontend/potatsolite/jquery.slicknav.min.js"></script>
    <!-- Jquery Slick , Owl-Carousel Plugins -->
    <script src="/assets/website/js/frontend/potatsolite/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/slick.min.js"></script>
    <!-- One Page, Animated-HeadLin -->
    <script src="/assets/website/js/frontend/potatsolite/wow.min.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/animated.headline.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/jquery.magnific-popup.js"></script>
    <!-- Date Picker -->
    <script src="/assets/website/js/frontend/potatsolite/gijgo.min.js"></script>
    <!-- Nice-select, sticky -->
    <script src="/assets/website/js/frontend/potatsolite/jquery.nice-select.min.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/jquery.sticky.js"></script>
    <!-- Progress -->
    <script src="/assets/website/js/frontend/potatsolite/jquery.barfiller.js"></script>
    <!-- counter , waypoint,Hover Direction -->
    <script src="/assets/website/js/frontend/potatsolite/jquery.counterup.min.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/waypoints.min.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/jquery.countdown.min.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/hover-direction-snake.min.js"></script>
    <!-- contact js -->
    <script src="/assets/website/js/frontend/potatsolite/contact.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/jquery.form.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/jquery.validate.min.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/mail-script.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/jquery.ajaxchimp.min.js"></script>
    <!-- Jquery Plugins, main Jquery -->
    <script src="/assets/website/js/frontend/potatsolite/plugins.js"></script>
    <script src="/assets/website/js/frontend/potatsolite/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>